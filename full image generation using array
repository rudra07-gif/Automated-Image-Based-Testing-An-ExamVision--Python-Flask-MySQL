import numpy as np
from PIL import Image
import matplotlib.pyplot as plt

# Function to create a JPG file of the letter "A" with different rotations and pixel values
def create_rotated_A_image():
    # Define the base array for "A" (5x5 simple representation)
    A_base = np.array([[0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0]], dtype=np.uint8)

    # Scale it up to 100x100 for better visibility
    A_scaled = np.kron(A_base, np.ones((20, 20), dtype=np.uint8))

    # Generate multiple rotated versions of "A"
    rotations = [0, 45, 90, 135]  # 0째, 45째, 90째, 135째 rotations

    # Create a blank canvas to fit all rotated images in a grid
    canvas_size = (220, 220)  # Grid of 2x2 of 100x100 images with padding
    canvas = Image.new('L', canvas_size, color=255)  # 'L' for grayscale mode

    # Paste each rotated image onto the canvas
    for i, angle in enumerate(rotations):
        rotated_A = Image.fromarray(A_scaled * 255).rotate(angle, expand=True)
        rotated_A.thumbnail((100, 100), Image.LANCZOS)  # Ensure it fits
        x_offset = (i % 2) * 110  # X position: 0 or 110 pixels
        y_offset = (i // 2) * 110  # Y position: 0 or 110 pixels
        canvas.paste(rotated_A, (x_offset, y_offset))

    # Save the result as a JPG file
    output_path = "rotated_Z_image.jpg"
    canvas.save(output_path)
    print(f"Image saved as {output_path}")

# Call the function to create the image
create_rotated_A_image()
